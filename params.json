{"name":"Renderly","tagline":"A non-proprietary version of my Rendering automation library/toolkit.","body":"So Renderly has these main responsibilities:\r\n\r\n* Reads data in from file/database for list of test cases to run\r\n* Hits the URLs, grabs the generated render, compares them with a reference image\r\n* Generates a report of the URLs that failed, and for what reason(s) they failed\r\n\r\nA test case specifies the following:\r\n\r\n1. URL to hit for a preview\r\n2. A location of the reference image (currently a UNC path somewhere)\r\n3. The type of test (matching, live preview, dip, blah blah, this is only for processing purposes)\r\n\r\nThe data model will be:\r\n\r\n* Test Case Number (int, PK)\r\n* Test Type (string)\r\n* URL to render (URL/string/blah)\r\n* Reference location (string, two parts - TypeOfLocation:Location)\r\n* Date Added (date)\r\n* Date Modified (date)\r\n* Release Added (string)\r\n* Description (optional, string)\r\n\r\nSo the flow of the program:\r\n\r\n* Start the engine\r\n* Pass in arguments to allow you to specify certain things\r\n * Test number(s) to test\r\n * Types of test(s) to run (like running all things of type 'lp')\r\n* Read in all the tests necessary (numbers, types, everything)\r\n* Process all the things and do all the comparisons\r\n* Generate a report with failures WITH NUSTACHE","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}